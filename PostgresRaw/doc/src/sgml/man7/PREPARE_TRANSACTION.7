'\" t
.\"     Title: PREPARE TRANSACTION
.\"    Author: The PostgreSQL Global Development Group
.\" Generator: DocBook XSL Stylesheets v1.75.1 <http://docbook.sf.net/>
.\"      Date: 2010-09-16
.\"    Manual: PostgreSQL 9.0.0 Documentation
.\"    Source: PostgreSQL 9.0.0
.\"  Language: English
.\"
.TH "PREPARE TRANSACTION" "7" "2010-09-16" "PostgreSQL 9.0.0" "PostgreSQL 9.0.0 Documentation"
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
PREPARE_TRANSACTION \- prepare the current transaction for two\-phase commit
.\" PREPARE TRANSACTION
.SH "SYNOPSIS"
.sp
.nf
PREPARE TRANSACTION \fItransaction_id\fR
.fi
.SH "DESCRIPTION"
.PP
PREPARE TRANSACTION
prepares the current transaction for two\-phase commit\&. After this command, the transaction is no longer associated with the current session; instead, its state is fully stored on disk, and there is a very high probability that it can be committed successfully, even if a database crash occurs before the commit is requested\&.
.PP
Once prepared, a transaction can later be committed or rolled back with
COMMIT PREPARED (\fBCOMMIT_PREPARED\fR(7))
or
ROLLBACK PREPARED (\fBROLLBACK_PREPARED\fR(7)), respectively\&. Those commands can be issued from any session, not only the one that executed the original transaction\&.
.PP
From the point of view of the issuing session,
PREPARE TRANSACTION
is not unlike a
ROLLBACK
command: after executing it, there is no active current transaction, and the effects of the prepared transaction are no longer visible\&. (The effects will become visible again if the transaction is committed\&.)
.PP
If the
PREPARE TRANSACTION
command fails for any reason, it becomes a
ROLLBACK: the current transaction is canceled\&.
.SH "PARAMETERS"
.PP
\fItransaction_id\fR
.RS 4
An arbitrary identifier that later identifies this transaction for
COMMIT PREPARED
or
ROLLBACK PREPARED\&. The identifier must be written as a string literal, and must be less than 200 bytes long\&. It must not be the same as the identifier used for any currently prepared transaction\&.
.RE
.SH "NOTES"
.PP
PREPARE TRANSACTION
is not intended for use in applications or interactive sessions\&. It\(aqs purpose is to allow an external transaction manager to perform atomic global transactions across multiple databases or other transactional resources\&. Unless you\(aqre writing a transaction manager, you probably shouldn\(aqt be using
PREPARE TRANSACTION\&.
.PP
This command must be used inside a transaction block\&. Use
\fBBEGIN\fR(7)
to start one\&.
.PP
It is not currently allowed to
PREPARE
a transaction that has executed any operations involving temporary tables, created any cursors
WITH HOLD, or executed
LISTEN
or
UNLISTEN\&. Those features are too tightly tied to the current session to be useful in a transaction to be prepared\&.
.PP
If the transaction modified any run\-time parameters with
SET
(without the
LOCAL
option), those effects persist after
PREPARE TRANSACTION, and will not be affected by any later
COMMIT PREPARED
or
ROLLBACK PREPARED\&. Thus, in this one respect
PREPARE TRANSACTION
acts more like
COMMIT
than
ROLLBACK\&.
.PP
All currently available prepared transactions are listed in the
pg_prepared_xacts
system view\&.
.if n \{\
.sp
.\}
.RS 4
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBCaution\fR
.ps -1
.br
.PP
It is unwise to leave transactions in the prepared state for a long time\&. This will interfere with the ability of
VACUUM
to reclaim storage, and in extreme cases could cause the database to shut down to prevent transaction ID wraparound (see
Section 23.1.4, \(lqPreventing Transaction ID Wraparound Failures\(rq, in the documentation)\&. Keep in mind also that the transaction continues to hold whatever locks it held\&. The intended usage of the feature is that a prepared transaction will normally be committed or rolled back as soon as an external transaction manager has verified that other databases are also prepared to commit\&.
.PP
If you have not set up an external transaction manager to track prepared transactions and ensure they get closed out promptly, it is best to keep the prepared\-transaction feature disabled by setting
max_prepared_transactions
to zero\&. This will prevent accidental creation of prepared transactions that might then be forgotten and eventually cause problems\&.
.sp .5v
.RE
.SH "EXAMPLES"
.PP
Prepare the current transaction for two\-phase commit, using
foobar
as the transaction identifier:
.sp
.if n \{\
.RS 4
.\}
.nf
PREPARE TRANSACTION \(aqfoobar\(aq;
.fi
.if n \{\
.RE
.\}
.SH "SEE ALSO"
COMMIT PREPARED (\fBCOMMIT_PREPARED\fR(7)), ROLLBACK PREPARED (\fBROLLBACK_PREPARED\fR(7))
