'\" t
.\"     Title: ecpg
.\"    Author: The PostgreSQL Global Development Group
.\" Generator: DocBook XSL Stylesheets v1.75.1 <http://docbook.sf.net/>
.\"      Date: 2010-09-16
.\"    Manual: PostgreSQL 9.0.0 Documentation
.\"    Source: PostgreSQL 9.0.0
.\"  Language: English
.\"
.TH "ECPG" "1" "2010-09-16" "PostgreSQL 9.0.0" "PostgreSQL 9.0.0 Documentation"
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
ecpg \- embedded SQL C preprocessor
.\" ecpg
.SH "SYNOPSIS"
.HP \w'ecpg\ 'u
ecpg [\fIoption\fR...] \fIfile\fR...
.SH "DESCRIPTION"
.PP
ecpg
is the embedded SQL preprocessor for C programs\&. It converts C programs with embedded SQL statements to normal C code by replacing the SQL invocations with special function calls\&. The output files can then be processed with any C compiler tool chain\&.
.PP
ecpg
will convert each input file given on the command line to the corresponding C output file\&. Input files preferably have the extension
\&.pgc, in which case the extension will be replaced by
\&.c
to determine the output file name\&. If the extension of the input file is not
\&.pgc, then the output file name is computed by appending
\&.c
to the full file name\&. The output file name can also be overridden using the
\fB\-o\fR
option\&.
.PP
This reference page does not describe the embedded SQL language\&. See
Chapter 33, ECPG - Embedded SQL in C, in the documentation
for more information on that topic\&.
.SH "OPTIONS"
.PP
ecpg
accepts the following command\-line arguments:
.PP
\fB\-c\fR
.RS 4
Automatically generate certain C code from SQL code\&. Currently, this works for
EXEC SQL TYPE\&.
.RE
.PP
\fB\-C \fR\fB\fImode\fR\fR
.RS 4
Set a compatibility mode\&.
\fImode\fR
can be
INFORMIX
or
INFORMIX_SE\&.
.RE
.PP
\fB\-D \fR\fB\fIsymbol\fR\fR
.RS 4
Define a C preprocessor symbol\&.
.RE
.PP
\fB\-i\fR
.RS 4
Parse system include files as well\&.
.RE
.PP
\fB\-I \fR\fB\fIdirectory\fR\fR
.RS 4
Specify an additional include path, used to find files included via
EXEC SQL INCLUDE\&. Defaults are
\&.
(current directory),
/usr/local/include, the
PostgreSQL
include directory which is defined at compile time (default:
/usr/local/pgsql/include), and
/usr/include, in that order\&.
.RE
.PP
\fB\-o \fR\fB\fIfilename\fR\fR
.RS 4
Specifies that
ecpg
should write all its output to the given
\fIfilename\fR\&.
.RE
.PP
\fB\-r \fR\fB\fIoption\fR\fR
.RS 4
Selects a run\-time behavior\&. Currently,
\fIoption\fR
can only be
no_indicator\&.
.RE
.PP
\fB\-t\fR
.RS 4
Turn on autocommit of transactions\&. In this mode, each SQL command is automatically committed unless it is inside an explicit transaction block\&. In the default mode, commands are committed only when
EXEC SQL COMMIT
is issued\&.
.RE
.PP
\fB\-v\fR
.RS 4
Print additional information including the version and the "include" path\&.
.RE
.PP
\fB\-\-version\fR
.RS 4
Print the
ecpg
version and exit\&.
.RE
.PP
\fB\-\-help\fR
.RS 4
Show help about
ecpg
command line arguments, and exit\&.
.RE
.SH "NOTES"
.PP
When compiling the preprocessed C code files, the compiler needs to be able to find the
ECPG
header files in the
PostgreSQL
include directory\&. Therefore, you might have to use the
\fB\-I\fR
option when invoking the compiler (e\&.g\&.,
\-I/usr/local/pgsql/include)\&.
.PP
Programs using C code with embedded SQL have to be linked against the
libecpg
library, for example using the linker options
\-L/usr/local/pgsql/lib \-lecpg\&.
.PP
The value of either of these directories that is appropriate for the installation can be found out using
\fBpg_config\fR(1)\&.
.SH "EXAMPLES"
.PP
If you have an embedded SQL C source file named
prog1\&.pgc, you can create an executable program using the following sequence of commands:
.sp
.if n \{\
.RS 4
.\}
.nf
ecpg prog1\&.pgc
cc \-I/usr/local/pgsql/include \-c prog1\&.c
cc \-o prog1 prog1\&.o \-L/usr/local/pgsql/lib \-lecpg
.fi
.if n \{\
.RE
.\}

