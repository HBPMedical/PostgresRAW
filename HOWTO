1. Building and running PostgresRAW

To install PostgresRaw you have to follow the same steps as in PostgreSQL:

When building with GCC 4.8 or later, we have to disable optimisations otherwise postgres fails to run properly.
a) CFLAGS=-O0 ./configure --prefix=<installation_path>
b) make
c) make install

d) Initialize PostgreSQL database cluster
<installation_path>/bin/initdb -D <PGDATA>
e) Create a database
bin/pg_ctl start -D <PGDATA>
bin/createdb <DBNAME>
f) Create a table
bin/psql <DBNAME>
<DBNAME>=# create table ... (http://www.postgresql.org/docs/9.1/static/sql-createtable.html) 
For RAW files, PostgresRAW assumes that the schema is known a priori and registered as a table. Additionally, the schema should "map" the structure of the file (no semi-structured data, no schema discovery). See below how to enable and configure PostgresRAW.



2. Configuring PostgresRAW

PostgresRAW allows to access data in csv files through empty dummy tables defined in the database. Each dummy table encodes a file's schema. When those dummy tables are queried, the data is read from the corresponding file directly (assuming the configuration further described here is completed).

The PostgreSQL configuration file 'postgresql.conf' is found under <PGDATA>.

The NoDB parameters are found at the end of this file:

Name of the NoDB configuration file:
#conf_file                     = 'snoop.conf'
Uncommenting this line allows the conf_file to be found and read. The conf_file should be stored under <PGDATA> (same folder as postgresql.conf).

Enable/Disable NoDB
#enable_invisible_db           = off
Uncomment and change to 'on' to enable NoDB.

You don't have to worry about the rest of the parameters

Example:
conf_file                     = 'snoop.conf'
enable_invisible_db           = on

The conf_file (by default 'snoop.conf') must contain the following structure for each raw text file to register :

filename-1 = '/home/yannis/NoDB/datafiles/load.txt'  --> Link to data file
relation-1 = 'persons'                               --> Table name (dummy table in the database)
delimiter-1 = ','                                    --> Delimiter for the file

Similarly for more files...
filename-2 = '/home/yannis/NoDB/datafiles/load2.txt'
relation-2 = 'persons2'
delimiter-2 = ','

Note 1: For each file (filename-n parameter), the corresponding table name (relation-n parameter) refers to an empty table that must be created in the database, with columns mapping exactly the data in the file. When a query is performed on the empty table, the data will be read from the file directly (if noDB is enabled).
Note 2: For changes in 'postgresql.conf' to be applied, you have to restart the DB.
Note 3: For changes in 'snoop.conf' to be applied, you have to restart the interactive terminal.


